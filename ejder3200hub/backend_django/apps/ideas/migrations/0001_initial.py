# Generated by Django 5.2.5 on 2025-09-01 05:43

import django.contrib.postgres.fields
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('resources', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Idea',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=36, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='Fikir Başlığı')),
                ('status', models.CharField(choices=[('New', 'Yeni Fikir'), ('Evaluating', 'Değerlendirmede'), ('Approved', 'Onaylandı'), ('Archived', 'Arşivlendi')], default='New', max_length=20, verbose_name='Durum')),
                ('category', models.CharField(blank=True, max_length=100, null=True, verbose_name='Kategori')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Açıklama')),
                ('summary', models.TextField(blank=True, null=True, verbose_name='Özet')),
                ('problem', models.TextField(blank=True, null=True, verbose_name='Problem')),
                ('problem_type', models.CharField(blank=True, max_length=50, null=True, verbose_name='Problem Tipi')),
                ('problem_frequency', models.CharField(blank=True, max_length=50, null=True, verbose_name='Problem Sıklığı')),
                ('solution', models.TextField(blank=True, null=True, verbose_name='Çözüm')),
                ('benefits', models.TextField(blank=True, null=True, verbose_name='Faydalar')),
                ('target_audience', models.TextField(blank=True, null=True, verbose_name='Hedef Kitle')),
                ('related_departments', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, default=list, size=None, verbose_name='İlgili Departmanlar')),
                ('potential_team', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=36), blank=True, default=list, size=None, verbose_name='Potansiyel Takım')),
                ('estimated_duration', models.CharField(blank=True, max_length=100, null=True, verbose_name='Tahmini Süre')),
                ('timeline_phases', models.JSONField(blank=True, null=True, verbose_name='Zaman Çizelgesi Aşamaları')),
                ('critical_milestones', models.TextField(blank=True, null=True, verbose_name='Kritik Kilometre Taşları')),
                ('total_budget', models.FloatField(blank=True, null=True, verbose_name='Toplam Bütçe')),
                ('budget_items', models.JSONField(blank=True, null=True, verbose_name='Bütçe Kalemleri')),
                ('expected_revenue_increase', models.FloatField(blank=True, null=True, verbose_name='Beklenen Gelir Artışı')),
                ('expected_cost_savings', models.FloatField(blank=True, null=True, verbose_name='Beklenen Maliyet Tasarrufu')),
                ('expected_roi', models.FloatField(blank=True, null=True, verbose_name='Beklenen ROI')),
                ('funding_sources', models.TextField(blank=True, null=True, verbose_name='Finansman Kaynakları')),
                ('revenue_sources', models.TextField(blank=True, null=True, verbose_name='Gelir Kaynakları')),
                ('swot_strengths', models.TextField(blank=True, null=True, verbose_name='Güçlü Yönler')),
                ('swot_weaknesses', models.TextField(blank=True, null=True, verbose_name='Zayıf Yönler')),
                ('swot_opportunities', models.TextField(blank=True, null=True, verbose_name='Fırsatlar')),
                ('swot_threats', models.TextField(blank=True, null=True, verbose_name='Tehditler')),
                ('risks', models.TextField(blank=True, null=True, verbose_name='Riskler')),
                ('risk_level', models.CharField(blank=True, max_length=20, null=True, verbose_name='Risk Seviyesi')),
                ('mitigations', models.TextField(blank=True, null=True, verbose_name='Risk Azaltma')),
                ('success_criteria', models.TextField(blank=True, null=True, verbose_name='Başarı Kriterleri')),
                ('files', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=500), blank=True, default=list, size=None, verbose_name='Dosyalar')),
                ('tags', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), blank=True, default=list, size=None, verbose_name='Etiketler')),
                ('priority', models.CharField(blank=True, choices=[('High', 'Yüksek'), ('Medium', 'Orta'), ('Low', 'Düşük')], max_length=20, null=True, verbose_name='Öncelik')),
                ('creation_date', models.CharField(blank=True, max_length=50, null=True, verbose_name='Oluşturma Tarihi')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authored_ideas', to='resources.resource', verbose_name='Yazar')),
                ('project_leader', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='led_ideas', to='resources.resource', verbose_name='Proje Lideri')),
            ],
            options={
                'verbose_name': 'Fikir',
                'verbose_name_plural': 'Fikirler',
                'db_table': 'ideas',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=36, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('Supports', 'Destekliyor'), ('Neutral', 'Nötr'), ('Opposed', 'Karşı')], max_length=20, verbose_name='Oy Durumu')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('idea', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='ideas.idea', verbose_name='Fikir')),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='resources.resource', verbose_name='Oy Veren')),
            ],
            options={
                'verbose_name': 'Oy',
                'verbose_name_plural': 'Oylar',
                'db_table': 'votes',
                'ordering': ['-created_at'],
                'unique_together': {('idea', 'resource')},
            },
        ),
    ]
